class RSLista
!!!212048.cpp!!!	RSLista()
    for (int i=0; i<tamanho; i++){
        recorde[i].inicializar();
    }
!!!212176.cpp!!!	~RSLista()
//não implementado
!!!184144.cpp!!!	getPrimeiro() : RSRecorde
    return recorde[0];
!!!184272.cpp!!!	getUltimo() : RSRecorde
    return recorde[(tamanho-1)];
!!!184400.cpp!!!	getRecorde(in indice : int) : RSRecorde
    if ((indice<0)||(indice>=tamanho)){
        throw "Indice não existente";
    } else {
        return recorde[indice];
    }
!!!184016.cpp!!!	pesquisar(in pesquisa : RSRecorde) : bool
    bool retorno = false;

    for (int i=0; i<tamanho; i++){
        if ((recorde[i].id==pesquisa.id) &&
            (recorde[i].pontos==pesquisa.pontos) &&
            (recorde[i].pontos==pesquisa.pontos) &&
            (recorde[i].fase==pesquisa.fase)){
            retorno=true;
        }
    }

    return retorno;
!!!183888.cpp!!!	adicionar(in novo : RSRecorde) : bool
    bool retorno = false;

    if (!pesquisar(novo)){
        if (novo.pontos > getUltimo().pontos){
            retorno = adicionarFinal(novo);
        }
    }

    return retorno;
!!!184528.cpp!!!	ordenar() : void
    int passo,Pi,j,indice;
    RSRecorde recordeAuxiliar;
    int Ppasso[4]={5,3,2,1};

    for (Pi=0; Pi<4; Pi++ ){

        passo=Ppasso[Pi];

        for (indice=passo; indice < tamanho; indice++){

            recordeAuxiliar=recorde[indice];

            for (j=indice-passo; recordeAuxiliar.pontos > recorde[j].pontos &&
                j >=0; j-=passo){
                    recorde[j+passo] = recorde[j];
            }

            recorde[j+passo] = recordeAuxiliar;
        }
    }
!!!184656.cpp!!!	adicionarFinal(in novo : RSRecorde) : bool
    bool retorno = true;

    try {
        recorde[tamanho-1]=novo;
        ordenar();
    } catch (std::exception& e){
        retorno = false;
        //log do exception = e.what();
    }

    return retorno;
!!!128238.cpp!!!	getLista() : RSLista
    return &recorde[0];
!!!128366.cpp!!!	setLista(in lista[] : RSRecorde) : void
    for (int i=0; i<tamanho; i++){
        recorde[i]=lista[i];
    }
